{"ast":null,"code":"var _jsxFileName = \"/Users/gayathriakash/Files/Learning/react-js/food-menu/src/components/Filters.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AreasDropdown from './AreasDropdown';\nimport Meal from './Meal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Filters() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [areas, setAreas] = useState([]);\n  const [selectedArea, setSelectedArea] = useState('');\n  const [meals, setMeals] = useState([]);\n  const [sortBy, setSortBy] = useState(null);\n  const [sortedMeals, setSortedMeals] = useState([]);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  useEffect(() => {\n    fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list').then(response => response.json()).then(data => {\n      setAreas(data.meals);\n    }).catch(error => {\n      console.log('Error fetching drop down items');\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedArea) {\n      fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${selectedArea}`).then(response => response.json()).then(data => {\n        // setMeals(data.meals)\n        const mealPromises = data.meals.map(async meal => {\n          const categoryResponse = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${meal.idMeal}`);\n          const categoryData = await categoryResponse.json();\n          return {\n            ...meal,\n            category: categoryData.meals[0].strCategory\n          };\n        });\n        Promise.all(mealPromises).then(mealsWithCategory => setMeals(mealsWithCategory));\n      }).catch(error => {\n        console.log('Error fetching meals');\n      });\n    }\n  }, [selectedArea]);\n  useEffect(() => {\n    fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=Indian`).then(response => response.json()).then(data => {\n      // setMeals(data.meals)\n      const mealPromises = data.meals.map(async meal => {\n        const categoryResponse = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${meal.idMeal}`);\n        const categoryData = await categoryResponse.json();\n        return {\n          ...meal,\n          category: categoryData.meals[0].strCategory\n        };\n      });\n      Promise.all(mealPromises).then(mealsWithCategory => setMeals(mealsWithCategory));\n    }).catch(error => {\n      console.log('Error fetching Indian , meals', error);\n    });\n  }, []);\n  const handleAreaSelection = area => {\n    setSelectedArea(area);\n    setIsOpen(false);\n  };\n  const handleSort = () => {\n    const sorted = [...meals].sort((a, b) => {\n      if (a.strMeal < b.strMeal) return -1;\n      if (a.strMeal > b.strMeal) return 1;\n    });\n    setSortedMeals(sorted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"antialiased font-bold text-2xl break-words pb-2.5\",\n      children: \"Restaurants with online food delivery in Pune\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-buttons relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDropdown,\n        className: \"border border-solid border-gray-300  filter-btn\",\n        children: selectedArea ? `Filter by ${selectedArea}` : \"Filter by Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(AreasDropdown, {\n        areas: areas,\n        handleAreaSelection: handleAreaSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSort,\n        className: \"border border-solid border-gray-300  filter-btn\",\n        children: \"Sort By\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"border border-solid border-gray-300  filter-btn\",\n        children: \"Sort By\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"border border-solid border-gray-300  filter-btn\",\n        children: \"Fast Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"border border-solid border-gray-300  filter-btn\",\n        children: \"Ratings 4.0+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"border border-solid border-gray-300  filter-btn\",\n        children: \"Offers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-4 gap-8 py-5\",\n      children: meals !== null && meals.map(meal => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Meal, {\n          meal: meal\n        }, meal.idMeal, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this)\n      }, meal.idMeal, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(Filters, \"tRC/zZjThd7A5ZsKl5IViIoEOLI=\");\n_c = Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useState","useEffect","AreasDropdown","Meal","jsxDEV","_jsxDEV","Filters","_s","isOpen","setIsOpen","areas","setAreas","selectedArea","setSelectedArea","meals","setMeals","sortBy","setSortBy","sortedMeals","setSortedMeals","toggleDropdown","fetch","then","response","json","data","catch","error","console","log","mealPromises","map","meal","categoryResponse","idMeal","categoryData","category","strCategory","Promise","all","mealsWithCategory","handleAreaSelection","area","handleSort","sorted","sort","a","b","strMeal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/gayathriakash/Files/Learning/react-js/food-menu/src/components/Filters.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AreasDropdown from './AreasDropdown';\nimport Meal from './Meal';\n\nexport default function Filters() {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [areas, setAreas] = useState([]);\n    const [selectedArea, setSelectedArea] = useState('');\n    const [meals, setMeals] = useState([]);\n    const [sortBy, setSortBy] = useState(null);\n    const [sortedMeals, setSortedMeals] = useState([]);\n\n    const toggleDropdown = () => {\n        setIsOpen(!isOpen);\n    }\n\n    useEffect(() => {\n        fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list')\n            .then(response => response.json())\n            .then(\n                data => {\n                    setAreas(data.meals)\n                }\n            )\n            .catch(error => {\n                console.log('Error fetching drop down items');\n            });\n    }, []);\n\n    useEffect(() => {\n        if (selectedArea) {\n\n            fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${selectedArea}`)\n                .then(response => response.json())\n                .then(\n                    data => {\n                        // setMeals(data.meals)\n                        const mealPromises = data.meals.map(async meal => {\n                            const categoryResponse = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${meal.idMeal}`);\n                            const categoryData = await categoryResponse.json();\n                            return { ...meal, category: categoryData.meals[0].strCategory };\n                        });\n                        Promise.all(mealPromises).then(mealsWithCategory => setMeals(mealsWithCategory));\n                    }\n                )\n                .catch(error => {\n                    console.log('Error fetching meals');\n                })\n        }\n    }, [selectedArea]);\n\n    useEffect(() => {\n        fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=Indian`)\n            .then(response => response.json())\n            .then(\n                data => {\n                    // setMeals(data.meals)\n                    const mealPromises = data.meals.map(async meal => {\n                        const categoryResponse = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${meal.idMeal}`);\n                        const categoryData = await categoryResponse.json();\n                        return { ...meal, category: categoryData.meals[0].strCategory };\n                    });\n                    Promise.all(mealPromises).then(mealsWithCategory => setMeals(mealsWithCategory));\n\n                }\n            )\n            .catch(error => {\n                console.log('Error fetching Indian , meals', error);\n            })\n    }, []);\n\n    const handleAreaSelection = (area) => {\n        setSelectedArea(area);\n        setIsOpen(false);\n    }\n\n    const handleSort = () => {\n        const sorted = [...meals].sort((a, b) => {\n            if (a.strMeal < b.strMeal) return -1;\n            if (a.strMeal > b.strMeal) return 1;\n        })\n        setSortedMeals(sorted);\n    };\n\n    return (\n        <div className='py-5'>\n            <h2 className='antialiased font-bold text-2xl break-words pb-2.5'>Restaurants with online food delivery in Pune</h2>\n            <div className=\"filter-buttons relative\">\n                <button onClick={toggleDropdown} className=\"border border-solid border-gray-300  filter-btn\">\n                    {selectedArea ? `Filter by ${selectedArea}` : \"Filter by Area\"}\n                </button>\n\n                {isOpen && <AreasDropdown areas={areas} handleAreaSelection={handleAreaSelection} />}\n\n                <button onClick={handleSort} className=\"border border-solid border-gray-300  filter-btn\">\n                    Sort By\n                </button>\n                <button className=\"border border-solid border-gray-300  filter-btn\">\n                    Sort By\n                </button>\n                <button className=\"border border-solid border-gray-300  filter-btn\">\n                    Fast Delivery\n                </button>\n                <button className=\"border border-solid border-gray-300  filter-btn\">\n                    Ratings 4.0+\n                </button>\n                <button className=\"border border-solid border-gray-300  filter-btn\">\n                    Offers\n                </button>\n            </div >\n            <div className=\"grid grid-cols-4 gap-8 py-5\">\n                {meals !== null && (\n                    meals.map(meal => (\n                        <div key={meal.idMeal}>\n                            <Meal key={meal.idMeal} meal={meal} />\n                        </div>\n                    ))\n\n                )}\n\n\n            </div>\n        </div >\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAE9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMoB,cAAc,GAAGA,CAAA,KAAM;IACzBX,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;EAEDP,SAAS,CAAC,MAAM;IACZoB,KAAK,CAAC,yDAAyD,CAAC,CAC3DC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CACDG,IAAI,IAAI;MACJd,QAAQ,CAACc,IAAI,CAACX,KAAK,CAAC;IACxB,CACJ,CAAC,CACAY,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IACjD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN5B,SAAS,CAAC,MAAM;IACZ,IAAIW,YAAY,EAAE;MAEdS,KAAK,CAAE,wDAAuDT,YAAa,EAAC,CAAC,CACxEU,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CACDG,IAAI,IAAI;QACJ;QACA,MAAMK,YAAY,GAAGL,IAAI,CAACX,KAAK,CAACiB,GAAG,CAAC,MAAMC,IAAI,IAAI;UAC9C,MAAMC,gBAAgB,GAAG,MAAMZ,KAAK,CAAE,wDAAuDW,IAAI,CAACE,MAAO,EAAC,CAAC;UAC3G,MAAMC,YAAY,GAAG,MAAMF,gBAAgB,CAACT,IAAI,CAAC,CAAC;UAClD,OAAO;YAAE,GAAGQ,IAAI;YAAEI,QAAQ,EAAED,YAAY,CAACrB,KAAK,CAAC,CAAC,CAAC,CAACuB;UAAY,CAAC;QACnE,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAACT,YAAY,CAAC,CAACR,IAAI,CAACkB,iBAAiB,IAAIzB,QAAQ,CAACyB,iBAAiB,CAAC,CAAC;MACpF,CACJ,CAAC,CACAd,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACvC,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,CAACjB,YAAY,CAAC,CAAC;EAElBX,SAAS,CAAC,MAAM;IACZoB,KAAK,CAAE,6DAA4D,CAAC,CAC/DC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CACDG,IAAI,IAAI;MACJ;MACA,MAAMK,YAAY,GAAGL,IAAI,CAACX,KAAK,CAACiB,GAAG,CAAC,MAAMC,IAAI,IAAI;QAC9C,MAAMC,gBAAgB,GAAG,MAAMZ,KAAK,CAAE,wDAAuDW,IAAI,CAACE,MAAO,EAAC,CAAC;QAC3G,MAAMC,YAAY,GAAG,MAAMF,gBAAgB,CAACT,IAAI,CAAC,CAAC;QAClD,OAAO;UAAE,GAAGQ,IAAI;UAAEI,QAAQ,EAAED,YAAY,CAACrB,KAAK,CAAC,CAAC,CAAC,CAACuB;QAAY,CAAC;MACnE,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACT,YAAY,CAAC,CAACR,IAAI,CAACkB,iBAAiB,IAAIzB,QAAQ,CAACyB,iBAAiB,CAAC,CAAC;IAEpF,CACJ,CAAC,CACAd,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,KAAK,CAAC;IACvD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,mBAAmB,GAAIC,IAAI,IAAK;IAClC7B,eAAe,CAAC6B,IAAI,CAAC;IACrBjC,SAAS,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAMkC,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,MAAM,GAAG,CAAC,GAAG9B,KAAK,CAAC,CAAC+B,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACrC,IAAID,CAAC,CAACE,OAAO,GAAGD,CAAC,CAACC,OAAO,EAAE,OAAO,CAAC,CAAC;MACpC,IAAIF,CAAC,CAACE,OAAO,GAAGD,CAAC,CAACC,OAAO,EAAE,OAAO,CAAC;IACvC,CAAC,CAAC;IACF7B,cAAc,CAACyB,MAAM,CAAC;EAC1B,CAAC;EAED,oBACIvC,OAAA;IAAK4C,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjB7C,OAAA;MAAI4C,SAAS,EAAC,mDAAmD;MAAAC,QAAA,EAAC;IAA6C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpHjD,OAAA;MAAK4C,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACpC7C,OAAA;QAAQkD,OAAO,EAAEnC,cAAe;QAAC6B,SAAS,EAAC,iDAAiD;QAAAC,QAAA,EACvFtC,YAAY,GAAI,aAAYA,YAAa,EAAC,GAAG;MAAgB;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,EAER9C,MAAM,iBAAIH,OAAA,CAACH,aAAa;QAACQ,KAAK,EAAEA,KAAM;QAAC+B,mBAAmB,EAAEA;MAAoB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEpFjD,OAAA;QAAQkD,OAAO,EAAEZ,UAAW;QAACM,SAAS,EAAC,iDAAiD;QAAAC,QAAA,EAAC;MAEzF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjD,OAAA;QAAQ4C,SAAS,EAAC,iDAAiD;QAAAC,QAAA,EAAC;MAEpE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjD,OAAA;QAAQ4C,SAAS,EAAC,iDAAiD;QAAAC,QAAA,EAAC;MAEpE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjD,OAAA;QAAQ4C,SAAS,EAAC,iDAAiD;QAAAC,QAAA,EAAC;MAEpE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjD,OAAA;QAAQ4C,SAAS,EAAC,iDAAiD;QAAAC,QAAA,EAAC;MAEpE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACPjD,OAAA;MAAK4C,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EACvCpC,KAAK,KAAK,IAAI,IACXA,KAAK,CAACiB,GAAG,CAACC,IAAI,iBACV3B,OAAA;QAAA6C,QAAA,eACI7C,OAAA,CAACF,IAAI;UAAmB6B,IAAI,EAAEA;QAAK,GAAxBA,IAAI,CAACE,MAAM;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe;MAAC,GADhCtB,IAAI,CAACE,MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACR;IAEJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf;AAAC/C,EAAA,CAzHuBD,OAAO;AAAAkD,EAAA,GAAPlD,OAAO;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}