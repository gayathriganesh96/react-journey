{"ast":null,"code":"var _jsxFileName = \"/Users/gayathriakash/Files/Learning/react-js/food-menu/src/components/MealList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MealList() {\n  _s();\n  const [meals, setMeals] = useState([]);\n  useEffect(() => {\n    fetch('https://www.themealdb.com/api/json/v1/1/filter.php?a=Indian').then(response => response.json()).then(data => {\n      // Assuming the API response contains an array of meals under data.meals\n      setMeals(data.meals);\n    }).catch(error => {\n      console.error('Error fetching meals:', error);\n    });\n  }, []); // Passing an empty dependency array to ensure the effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: meals.map(meal => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: meal.strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)\n    }, meal.idMeal, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n}\n\n// import React, { useEffect, useState } from \"react\";\n\n// export default function MealList() {\n\n//     const [meals, setMeals] = useState([]);\n\n//     useEffect(() => {\n//         fetch('www.themealdb.com/api/json/v1/1/filter.php?a=Indian')\n//             .then(response => response.json())\n//             .then(data => {\n//                 setMeals(data.meals);\n//             })\n//             .catch(error => {\n//                 console.log('Error fetching meals : ');\n//             });\n//     }, []);\n\n//     // return (\n//     //     <>\n//     //         {\n//     //             meals.map(meal => (\n//     //                 <div key={meal.idMeal}>\n//     //                     <p>{meal.strMeal}</p>\n//     //                 </div>\n//     //             ))\n//     //         }\n//     //     </>\n//     // );\n\n//     return (\n//         <>\n//             {meals.map(meal => (\n//                 <div key={meal.idMeal}>\n//                     <p>{meal.strMeal}</p>\n//                     {/* You can display more details of the meal here */}\n//                 </div>\n//             ))}\n//         </>\n//     );\n// }\n_s(MealList, \"an3554G5PYiaii/PlvHt6YA7hZs=\");\n_c = MealList;\nvar _c;\n$RefreshReg$(_c, \"MealList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","MealList","_s","meals","setMeals","fetch","then","response","json","data","catch","error","console","children","map","meal","strMeal","fileName","_jsxFileName","lineNumber","columnNumber","idMeal","_c","$RefreshReg$"],"sources":["/Users/gayathriakash/Files/Learning/react-js/food-menu/src/components/MealList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function MealList() {\n    const [meals, setMeals] = useState([]);\n\n    useEffect(() => {\n        fetch('https://www.themealdb.com/api/json/v1/1/filter.php?a=Indian')\n            .then(response => response.json())\n            .then(data => {\n                // Assuming the API response contains an array of meals under data.meals\n                setMeals(data.meals);\n            })\n            .catch(error => {\n                console.error('Error fetching meals:', error);\n            });\n    }, []); // Passing an empty dependency array to ensure the effect runs only once\n\n    return (\n        <>\n            {meals.map(meal => (\n                <div key={meal.idMeal}>\n                    <p>{meal.strMeal}</p>\n                    {/* You can display more details of the meal here */}\n                </div>\n            ))}\n        </>\n    );\n}\n\n// import React, { useEffect, useState } from \"react\";\n\n// export default function MealList() {\n\n//     const [meals, setMeals] = useState([]);\n\n//     useEffect(() => {\n//         fetch('www.themealdb.com/api/json/v1/1/filter.php?a=Indian')\n//             .then(response => response.json())\n//             .then(data => {\n//                 setMeals(data.meals);\n//             })\n//             .catch(error => {\n//                 console.log('Error fetching meals : ');\n//             });\n//     }, []);\n\n//     // return (\n//     //     <>\n//     //         {\n//     //             meals.map(meal => (\n//     //                 <div key={meal.idMeal}>\n//     //                     <p>{meal.strMeal}</p>\n//     //                 </div>\n//     //             ))\n//     //         }\n//     //     </>\n//     // );\n\n//     return (\n//         <>\n//             {meals.map(meal => (\n//                 <div key={meal.idMeal}>\n//                     <p>{meal.strMeal}</p>\n//                     {/* You can display more details of the meal here */}\n//                 </div>\n//             ))}\n//         </>\n//     );\n// }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZS,KAAK,CAAC,6DAA6D,CAAC,CAC/DC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV;MACAL,QAAQ,CAACK,IAAI,CAACN,KAAK,CAAC;IACxB,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIb,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACKV,KAAK,CAACW,GAAG,CAACC,IAAI,iBACXjB,OAAA;MAAAe,QAAA,eACIf,OAAA;QAAAe,QAAA,EAAIE,IAAI,CAACC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,GADfL,IAAI,CAACM,MAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGhB,CACR;EAAC,gBACJ,CAAC;AAEX;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAlB,EAAA,CAlEwBD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}